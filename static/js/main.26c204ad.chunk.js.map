{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","helpers/helpers.tsx","index.tsx"],"names":["TodoList","todos","onSelectTodo","isModalOpen","selectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","handleSelectTodosByFilter","filterType","searchQuery","handleSearchQuery","setSearchQuery","value","onChange","event","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onCloseModal","useState","userName","setUserName","isFetching","setIsFetching","getLoadedUser","a","userId","loadedTodo","name","useEffect","href","App","setTodos","setSelectedTodo","setIsModalOpen","setFilterType","useCallback","loadTodos","loadedTodos","visibleTodos","useMemo","filter","filteredTodo","toLowerCase","includes","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26c204ad.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelectTodo: (todo: Todo) => void,\n  isModalOpen: boolean,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, onSelectTodo, isModalOpen, selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td\n              className=\"is-vcentered\"\n            >\n              {todo.id}\n            </td>\n\n            {todo.completed\n              ? (\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              )\n              : <td className=\"is-vcentered\" />}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger'}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelectTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={isModalOpen && selectedTodo === todo\n                    ? 'far fa-eye-slash'\n                    : 'far fa-eye'}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  handleSelectTodosByFilter: (value: string) => void,\n  filterType: string,\n  searchQuery: string,\n  handleSearchQuery: (event: React.SetStateAction<string>) => void,\n  setSearchQuery: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleSelectTodosByFilter,\n  filterType,\n  searchQuery,\n  handleSearchQuery,\n  setSearchQuery,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filterType}\n            onChange={(event) => handleSelectTodosByFilter(event.target.value)}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(event) => handleSearchQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {searchQuery && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchQuery('')}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, {\n  useEffect, useState,\n} from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  onCloseModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onCloseModal,\n}) => {\n  const [userName, setUserName] = useState('');\n  const [isFetching, setIsFetching] = useState(false);\n\n  const getLoadedUser = async () => {\n    setIsFetching(true);\n\n    const loadedTodo = await getUser(selectedTodo.userId);\n\n    setUserName(loadedTodo.name);\n\n    setIsFetching(false);\n  };\n\n  useEffect(() => {\n    getLoadedUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isFetching || !userName ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                )\n                : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {userName}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, {\n  useEffect, useState, useMemo, useCallback,\n} from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { filterTodos } from './helpers/helpers';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isFetching, setIsFetching] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [filterType, setFilterType] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const onCloseModal = () => {\n    setIsModalOpen(false);\n    setSelectedTodo(null);\n  };\n\n  const handleSelectTodosByFilter = (value: string) => {\n    setFilterType(value);\n  };\n\n  const handleSearchQuery = (event: React.SetStateAction<string>) => {\n    setSearchQuery(event);\n  };\n\n  const onSelectTodo = useCallback((todo: Todo) => {\n    setSelectedTodo(todo);\n\n    setIsModalOpen(true);\n  }, []);\n\n  const loadTodos = async () => {\n    setIsFetching(true);\n    const loadedTodos = await getTodos();\n\n    setTodos(loadedTodos);\n\n    setIsFetching(false);\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  const visibleTodos = useMemo(\n    () => filterTodos(\n      todos,\n      filterType,\n      searchQuery,\n    ), [todos, filterType, searchQuery],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterType={filterType}\n                handleSelectTodosByFilter={handleSelectTodosByFilter}\n                searchQuery={searchQuery}\n                handleSearchQuery={handleSearchQuery}\n                setSearchQuery={setSearchQuery}\n              />\n            </div>\n\n            {isFetching\n              ? <Loader />\n              : (\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    onSelectTodo={onSelectTodo}\n                    isModalOpen={isModalOpen}\n                    selectedTodo={selectedTodo}\n                  />\n                </div>\n              )}\n\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && isModalOpen\n        && (\n          <TodoModal\n            selectedTodo={selectedTodo}\n            onCloseModal={onCloseModal}\n          />\n        )}\n    </>\n  );\n};\n","import { Todo } from '../types/Todo';\n\nexport const filterTodos = (\n  todos: Todo[],\n  filterType: string,\n  searchQuery: string,\n) => {\n  return todos.filter(todo => {\n    const filteredTodo = todo.title\n      .toLowerCase()\n      .includes(searchQuery.toLowerCase());\n\n    switch (filterType) {\n      case 'active':\n        return !todo.completed && filteredTodo;\n\n      case 'completed':\n        return todo.completed && filteredTodo;\n\n      default:\n        return todo && filteredTodo;\n    }\n  });\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}